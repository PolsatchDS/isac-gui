{"remainingRequest":"/Users/Pol/WebstormProjects/isac-gui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Pol/WebstormProjects/isac-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Pol/WebstormProjects/isac-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Pol/WebstormProjects/isac-gui/src/containers/layouts/verticalSidebarTwo/verticalTopbar.vue?vue&type=template&id=3e8e4fda&","dependencies":[{"path":"/Users/Pol/WebstormProjects/isac-gui/src/containers/layouts/verticalSidebarTwo/verticalTopbar.vue","mtime":1610314658000},{"path":"/Users/Pol/WebstormProjects/isac-gui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Pol/WebstormProjects/isac-gui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Pol/WebstormProjects/isac-gui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Pol/WebstormProjects/isac-gui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}